<?php

require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/prolog_before.php");

// –†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫–ª–∞—Å—Å–æ–≤!!!
// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª —Å —Ç–∞–±–ª–∏—Ü–µ–π
require_once($_SERVER["DOCUMENT_ROOT"] . "/local/modules/somepartner.mybookscatalog/lib/book.php");

use SomePartner\MyBooksCatalog\BookTable;
use Bitrix\Main\Type;


function add() {
    try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
        $dbConnection = \Bitrix\Main\Application::getInstance()->getConnection();
        if (!$dbConnection->isTableExists('my_book')) {
            throw new \Exception("–¢–∞–±–ª–∏—Ü–∞ my_book –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î");
        }
        echo "–¢–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" . '<br>';

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        $result = BookTable::add(array(
        'ISBN' => '978-0321127426',
        'TITLE' => 'Patterns of Enterprise Application Architecture',
        'PUBLISH_DATE' => new Type\Date('2002-11-16', 'Y-m-d'),
        'EDITIONS_ISBN' => ['9780321127422', '9780321127421']
        ));
        if ($result->isSuccess())
        {
        $id = $result->getId();
        }
        echo '–î–æ–±–∞–≤–ª–µ–Ω–æ';

        if ($result->isSuccess()) {
            echo "‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.<br>";
            echo "–ù–æ–≤—ã–π ID: " . $result->getId();
        } else {
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:<br>";
            foreach ($result->getErrorMessages() as $error) {
                echo "- " . $error . "<br>";
            }
        }

    } catch (\Exception $e) {
        echo "üî• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage();
    }
}


function update($id) {
    try {
        // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
        $result = BookTable::update($id, array(
            'PUBLISH_DATE' => new Type\Date('2102-11-15', 'Y-m-d')
        ));
        if ($result->isSuccess())
        {
            echo '‚úÖ –ó–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫: ' . $result->getAffectedRowsCount();
        } else {
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏:<br>";
            foreach ($result->getErrorMessages() as $error) {
                echo "- " . $error . "<br>";
            }
            throw new \Exception("‚ùå –ó–∞–ø–∏—Å—å –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞");
        }

    } catch (\Exception $e) {
        echo "üî• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage();
    }
}

echo "–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ <br>";

// add();

// update(2);

$allBooks = BookTable::getList([
    'select' => ['*'],
]);
echo "<h2>–í—Å–µ –∫–Ω–∏–≥–∏</h2>";
echo "<ul>";
while ($book = $allBooks->fetch()) {
    echo "<li>ID: {$book['ID']}, ISBN: {$book['ISBN']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {$book['TITLE']}, PUBLISH_DATE: {$book['PUBLISH_DATE']}, –ß–∏—Ç–∞—Ç–µ–ª–µ–π: {$book['READERS_COUNT']}</li>";
}
echo "</ul>";



$book = BookTable::getByPrimary(1)
	->fetchObject();
$title = $book->get('TITLE'); 
$date = $book->get('PUBLISH_DATE');
echo "<h2>–í—ã–≤–æ–¥ –ø–æ–ª–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–Ω–∏–≥–∏</h2>";
echo "". $title ." " . $date;


if ($book) {
    echo "<h2>–í—ã–≤–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–Ω–∏–≥–∏ –≤ raw —Ñ–æ—Ä–º–∞—Ç–µ</h2>";
    echo "<pre>";
    print_r($book);
    echo "</pre>";
} else {
    echo "<p>–ö–Ω–∏–≥–∞ —Å ID = {$id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>";
}


// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–º
require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/epilog_after.php");

